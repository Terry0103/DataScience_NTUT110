#IMPORT DATA ----
raw_data <- read.csv("C:/Users/鄭可雍/Desktop/DS HW2_fgd/fgd_data/train.csv", header = T)
raw_data <- read.csv("C:/Users/鄭可雍/Desktop/fgd_data/train.csv", header = T)
#IMPORT DATA ----
#LAPTOP URL
raw_data <- read.csv("C:/Users/user/Desktop/DS HW2_fgd/train.csv", header = T)
#IMPORT DATA ----
#LAPTOP URL
raw_data <- read.csv("C:/Users/user/Desktop/DS HW2_fgd/fgd_data/train.csv", header = T)
#remove id and Time and label variables
raw_data <- raw_data[,-c(1:2)]
#CUT LOW VARIANCE FEATURES ----
nor_data <- raw_data
#normalize data
for (i in 1:24){
nor_data[,i] <- raw_data[,i] / mean(raw_data[,i])
}
q <- 0
for (i in 1:24){
if(var(nor_data[,i] < 0.005)){
q <- union(q,i)
}
}
q <- q[-1]
cuted_data <- raw_data[,-q]
cuted_data[,18] <- as.factor(cuted_data[,18])
str(cuted_data)
remove(nor_data)
#RANDOM SAMPLING BY HAND----
set.seed(1228)
sample_data <- NULL
n = 5000
sample_data <- NULL
for(i in 1:5){
x <- NULL
x <- which(raw_data$Y == i)
if(x >= n){
y <- sample(x, size = n, replace = F)
sample_data <- rbind(sample_data, cuted_data[y,])
}
y <- sample(x, size = n, replace = T)
sample_data <- rbind(sample_data, cuted_data[y,])
}
table(sample_data$Y)
str(sample_data)
n = 3000
sample_data <- NULL
for(i in 1:5){
x <- NULL
x <- which(raw_data$Y == i)
if(x >= n){
y <- sample(x, size = n, replace = F)
sample_data <- rbind(sample_data, cuted_data[y,])
}
y <- sample(x, size = n, replace = T)
sample_data <- rbind(sample_data, cuted_data[y,])
}
str(sample_data)
table(sample_data$Y)
#TREE MODEL ----
library(tree)
set.seed(1228)
train <- sample(1:nrow(sample_data), nrow(sample_data)*0.7, replace = F)
fit.tree <- tree( ~., data = sample_data, subset = train)
fit.tree <- tree( .~., data = sample_data, subset = train)
?tree
fit.tree <- tree( Y~., data = sample_data, subset = train)
summary(fit.tree)
yhat <- predict(fit.tree, newdata = sample_data[-train,-18])
head(yhat)
data.test <- sample_data[-train, 'Y']
#MSE
mean((yhat - as.integer(data.test))^ 2)
#DESKTOP
#test <- read.csv("C:/Users/鄭可雍/Desktop/DS HW2_fgd/fgd_data/test.csv", header = T)
#LAPTOP
test <- read.csv("C:/Users/user/Desktop/DS HW2_fgd/fgd_data/test.csv", header = T)
test <- test[,-c(1:2)]
test <- test[,-q]
yhat_test <- predict(fit.tree, newdata = test)
name <- c('ID','C1','C2','C3','C4','C5')
col <- c(1:500)
yhat_test <- cbind(col,yhat_test)
colnames(yhat_test) <- name
head(yhat_test)
#IMPORT DATA ----
#LAPTOP URL
raw_data <- read.csv("C:/Users/user/Desktop/DS HW2_fgd/fgd_data/train.csv", header = T)
#remove id and Time and label variables
raw_data <- raw_data[,-c(1:2)]
#DATA IMBLANCE ----
#the histgram shows that there is imbalance in the this data
table(raw_data$Y)
hist(raw_data[,25], xlab = 'Cluster', col = raw_data$Y)
abline(h = 400, col = 'blue')
#CUT LOW VARIANCE FEATURES ----
nor_data <- raw_data
#normalize data
for (i in 1:24){
nor_data[,i] <- raw_data[,i] / mean(raw_data[,i])
}
q <- 0
for (i in 1:24){
if(var(nor_data[,i] < 0.005)){
q <- union(q,i)
}
}
q <- q[-1]
cuted_data <- raw_data[,-q]
cuted_data[,18] <- as.factor(cuted_data[,18])
str(cuted_data)
remove(nor_data)
label <- c('1', '2', '3', '4', '5')
label <- c('1', '2', '3', '4', '5')
for(i in 1:5){
x <- NULL
x <- which(raw_data$Kingdom == label[i])
if(length(x) >= n){
y <- sample(x, size = n, replace = F)
sample_data <- rbind(sample_data, raw_data[y,])
}
else{
y <- sample(x, size = n, replace = T)
sample_data <- rbind(sample_data, raw_data[y,])
}
}
#RANDOM SAMPLING BY HAND----
set.seed(1228)
n = 3000
sample_data <- NULL
label <- c('1', '2', '3', '4', '5')
for(i in 1:5){
x <- NULL
x <- which(raw_data$Kingdom == label[i])
if(length(x) >= n){
y <- sample(x, size = n, replace = F)
sample_data <- rbind(sample_data, raw_data[y,])
}
else{
y <- sample(x, size = n, replace = T)
sample_data <- rbind(sample_data, raw_data[y,])
}
}
sample_data <- NULL
label <- c('1', '2', '3', '4', '5')
for(i in 1:5){
x <- NULL
x <- which(cuted_data$Y == label[i])
if(length(x) >= n){
y <- sample(x, size = n, replace = F)
sample_data <- rbind(sample_data, cuted_data[y,])
}
else{
y <- sample(x, size = n, replace = T)
sample_data <- rbind(sample_data, cuted_data[y,])
}
}
n = 4500
sample_data <- NULL
label <- c('1', '2', '3', '4', '5')
for(i in 1:5){
x <- NULL
x <- which(cuted_data$Y == label[i])
if(length(x) >= n){
y <- sample(x, size = n, replace = F)
sample_data <- rbind(sample_data, cuted_data[y,])
}
else{
y <- sample(x, size = n, replace = T)
sample_data <- rbind(sample_data, cuted_data[y,])
}
}
table(sample_data$Y)
str(sample_data)
#RANDOMFOREST MODEL ----
library(randomForest)
fit.tm <- randomForest(Y ~ ., data = sample_data,
sub = train,
mtry = 17,
ntree = 60,
importance = T)
train <- sample(1:nrow(sample_data), size = nrow(sample_data)*0.8,
replace = F)
fit.tm <- randomForest(Y ~ ., data = sample_data,
sub = train,
mtry = 17,
ntree = 150,
importance = T)
plot(fit.tm)
fit.tm
abline(v = 60, col ='red', lwd = 3)
abline(v = 60, col ='red', lwd = 3)
summary(fit.tm)
names(fit.tm)
importance(fit.tm, type = 1)
varImpPlot(fit.tm)
yhat.rm <- predict(fit.tm, newdata = sample_data[-train,], type = 'response')
str(yhat.rm)
data.test <- sample_data[-train, 'Y']
plot(as.integer(yhat.rm), as.integer(data.test))
abline(a = 0, b = 1, lwd = 2 ,col = 'gray')
#MSE
mean((as.integer(yhat) - as.integer(data.test))^ 2)
yhat_test.rm <- predict(fit.tm, newdata = test)
yhat.rm <- predict(fit.tm, newdata = sample_data[-train,], type = 'terms')
yhat.rm <- predict(fit.tm, newdata = sample_data[-train,], type = 'vote')
View(yhat.rm)
plot(as.integer(yhat.rm), as.integer(data.test))
plot(yhat.rm, data.test)
data.test <- sample_data[-train, 'Y']
plot(yhat.rm, data.test)
plot(yhat.rm, as.numerical(data.test))
plot(yhat.rm, as.numeric(data.test))
yhat_test.rm <- predict(fit.tm, newdata = test)
#DESKTOP
#test <- read.csv("C:/Users/鄭可雍/Desktop/DS HW2_fgd/fgd_data/test.csv", header = T)
#LAPTOP
test <- read.csv("C:/Users/user/Desktop/DS HW2_fgd/fgd_data/test.csv", header = T)
test <- test[,-c(1:2)]
test <- test[,-q]
name <- c('ID','C1','C2','C3','C4','C5')
col <- c(1:500)
yhat_test <- cbind(col,yhat.rm)
colnames(yhat_test) <- name
head(yhat_test)
write.csv(yhat_test,"C:/Users/鄭可雍/Desktop/DS HW2_fgd/fgd_data/tree1228.csv",
row.names = F)
write.csv(yhat_test,"C:/Users/user/Desktop/DS HW2_fgd/fgd_data/rm0110.csv",
row.names = F)
head(yhat_test)
yhat.rm
yhat_test <- yhat_test[,-1]
head(yhat_test)
yhat_test <- yhat_test[,-1]
head(yhat_test)
name <- c('ID','C1','C2','C3','C4','C5')
col <- c(1:500)
yhat_test <- cbind(col,yhat.rm)
colnames(yhat_test) <- name
head(yhat_test)
View(yhat.rm)
print(head(yhat_test), row.names = F)
print(head(yhat_test), row.names = T)
print(head(yhat_test), row.names = F)
yhat.rm
yhat.rm <- predict(fit.tm, newdata = test, type = 'vote')
yhat_test <- cbind(col,yhat.rm)
colnames(yhat_test) <- name
yhat_test <- yhat_test
print(head(yhat_test), row.names = F)
head(yhat_test)
write.csv(yhat_test,"C:/Users/user/Desktop/DS HW2_fgd/fgd_data/rm0110.csv",
row.names = F)
for(i in 1:5){
x <- NULL
x <- which(cuted_data$Y == label[i])
if(length(x) >= n){
y <- sample(x, size = nrow(x)*0.8, replace = F)
sample_data <- rbind(sample_data, cuted_data[y,])
}
else{
y <- sample(x, size = n, replace = T)
sample_data <- rbind(sample_data, cuted_data[y,])
}
}
for(i in 1:5){
x <- NULL
x <- which(cuted_data$Y == label[i])
if(length(x) >= n){
y <- sample(x, size = length(x)(x)*0.8, replace = F)
sample_data <- rbind(sample_data, cuted_data[y,])
}
else{
y <- sample(x, size = n, replace = T)
sample_data <- rbind(sample_data, cuted_data[y,])
}
}
y <- sample(x, size = length(x)*0.8, replace = F)
label <- c('1', '2', '3', '4', '5')
for(i in 1:5){
x <- NULL
x <- which(cuted_data$Y == label[i])
if(length(x) >= n){
y <- sample(x, size = length(x)*0.8, replace = F)
sample_data <- rbind(sample_data, cuted_data[y,])
}
else{
y <- sample(x, size = n, replace = T)
sample_data <- rbind(sample_data, cuted_data[y,])
}
}
table(sample_data$Y)
sample_data <- NULL
label <- c('1', '2', '3', '4', '5')
for(i in 1:5){
x <- NULL
x <- which(cuted_data$Y == label[i])
if(length(x) >= n){
y <- sample(x, size = length(x)*0.8, replace = F)
sample_data <- rbind(sample_data, cuted_data[y,])
}
else{
y <- sample(x, size = n, replace = T)
sample_data <- rbind(sample_data, cuted_data[y,])
}
}
table(sample_data$Y)
#DATA IMBLANCE ----
#the histgram shows that there is imbalance in the this data
table(raw_data$Y)
n = 2000
sample_data <- NULL
label <- c('1', '2', '3', '4', '5')
for(i in 1:5){
x <- NULL
x <- which(cuted_data$Y == label[i])
if(length(x) >= n){
y <- sample(x, size = length(x)*0.8, replace = F)
sample_data <- rbind(sample_data, cuted_data[y,])
}
else{
y <- sample(x, size = n, replace = T)
sample_data <- rbind(sample_data, cuted_data[y,])
}
}
table(sample_data$Y)
#RANDOMFOREST MODEL ----
library(randomForest)
train <- sample(1:nrow(sample_data), size = nrow(sample_data)*0.8,
replace = F)
fit.tm <- randomForest(Y ~ ., data = sample_data,
sub = train,
mtry = 17,
ntree = 150,
importance = T)
fit.tm
yhat_test.rm <- predict(fit.tm, newdata = test)
yhat.rm <- predict(fit.tm, newdata = test, type = 'vote')
name <- c('ID','C1','C2','C3','C4','C5')
col <- c(1:500)
yhat_test <- cbind(col,yhat.rm)
colnames(yhat_test) <- name
yhat_test <- yhat_test
head(yhat_test)
write.csv(yhat_test,"C:/Users/user/Desktop/DS HW2_fgd/fgd_data/rm0110.csv",
row.names = F)
fit.tm <- randomForest(Y ~ ., data = sample_data,
mtry = 17,
ntree = 60,
importance = T)
fit.tm
label <- c('1', '2', '3', '4', '5')
for(i in 1:5){
x <- NULL
x <- which(cuted_data$Y == label[i])
if(length(x) >= n){
y <- sample(x, size = length(x), replace = F)
sample_data <- rbind(sample_data, cuted_data[y,])
}
else{
y <- sample(x, size = n, replace = T)
sample_data <- rbind(sample_data, cuted_data[y,])
}
}
table(sample_data$Y)
#RANDOM SAMPLING BY HAND----
set.seed(1228)
n = 3000
sample_data <- NULL
label <- c('1', '2', '3', '4', '5')
for(i in 1:5){
x <- NULL
x <- which(cuted_data$Y == label[i])
if(length(x) >= n){
y <- sample(x, size = length(x), replace = F)
sample_data <- rbind(sample_data, cuted_data[y,])
}
else{
y <- sample(x, size = n, replace = T)
sample_data <- rbind(sample_data, cuted_data[y,])
}
}
table(sample_data$Y)
fit.tm <- randomForest(Y ~ ., data = sample_data,
mtry = 17,
ntree = 60,
importance = T)
fit.tm
yhat.rm <- predict(fit.tm, newdata = test, type = 'vote')
name <- c('ID','C1','C2','C3','C4','C5')
col <- c(1:500)
yhat_test <- cbind(col,yhat.rm)
colnames(yhat_test) <- name
yhat_test <- yhat_test
head(yhat_test)
write.csv(yhat_test,"C:/Users/user/Desktop/DS HW2_fgd/fgd_data/rm0110.csv",
row.names = F)
#IMPORT DATA ----
#LAPTOP URL
raw_data <- read.csv("C:/Users/user/Desktop/DS HW2_fgd/fgd_data/train.csv", header = T)
dim(raw_data)
str(raw_data)
#remove id and Time and label variables
raw_data <- raw_data[,-c(1:2)]
#CUT LOW VARIANCE FEATURES ----
nor_data <- raw_data
#normalize data
for (i in 1:24){
nor_data[,i] <- raw_data[,i] / mean(raw_data[,i])
}
q <- 0
for (i in 1:24){
if(var(nor_data[,i] < 0.005)){
q <- union(q,i)
}
}
q <- q[-1]
cuted_data <- raw_data[,-q]
cuted_data[,18] <- as.factor(cuted_data[,18])
str(cuted_data)
dim(cuted_data)
remove(nor_data)
#RANDOM SAMPLING BY HAND----
set.seed(1228)
id <- sample(1:nrow(cuted_data), nrow(cuted_data) * 0.8, replace = F)
train <- cuted_data[id,]
test <- cuted_data[-id,]
n = 3000
sample_data <- NULL
label <- c('1', '2', '3', '4', '5')
for(i in 1:5){
x <- NULL
x <- which(train$Y == i)
if(length(x) >= n){
y <- sample(x, size = n, replace = F)
sample_data <- rbind(sample_data, train[y,])
}
else{
y <- sample(x, size = n, replace = T)
sample_data <- rbind(sample_data, train[y,])
}
}
table(sample_data$Y)
fit.tm <- randomForest(Y ~ ., data = train,
mtry = 17,
ntree = 200,
importance = T)
#RANDOMFOREST MODEL ----
library(randomForest)
fit.tm <- randomForest(Y ~ ., data = train,
mtry = 17,
ntree = 200,
importance = T)
fit.tm
plot(fit.tm)
yhat_test.rm <- predict(fit.tm, newdata = test)
str(yhat_test.rm)
table(Pred = yhat_test.tm,
True = test$Y)
yhat_test.rm <- predict(fit.tm, newdata = test)
table(Pred = yhat_test.rm,
True = test$Y)
p <- table(Pred = yhat_test.rm,
True = test$Y)
sum(diag(p))/nrow(test)
test <- read.csv("C:/Users/user/Desktop/DS HW2_fgd/fgd_data/test.csv", header = T)
test <- test[,-c(1:2)]
test <- test[,-q]
remove(test)
#DESKTOP
#test <- read.csv("C:/Users/鄭可雍/Desktop/DS HW2_fgd/fgd_data/test.csv", header = T)
#LAPTOP
test <- read.csv("C:/Users/user/Desktop/DS HW2_fgd/fgd_data/test.csv", header = T)
test <- test[,-c(1:2)]
test <- test[,-q]
yhat_test.rm <- predict(fit.tm, newdata = test)
p <- table(Pred = yhat_test.rm,
True = test$Y)
sum(diag(p))/nrow(test)
remove(yhat_test.rm)
yhat_test.rm <- predict(fit.tm, newdata = test)
p <- table(Pred = yhat_test.rm,
True = test$Y)
mean((yhat_test.rm - test)^ 2)
yhat_test.rm <- predict(fit.tm, newdata = test, type = 'vote')
mean((yhat_test.rm - test)^ 2)
yhat_test.rm
test
